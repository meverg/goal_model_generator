(set-option :produce-models true)
(set-option :opt.priority lex)

(declare-fun G0 () Bool) 
(assert G0)
(assert-soft G0 :id unsat_requirements)
(declare-fun G1 () Bool) 
(declare-fun G2 () Bool) 
(declare-fun G3 () Bool) 
(assert G3)
(assert-soft G3 :id unsat_requirements)
(declare-fun G4 () Bool) 
(declare-fun R0 () Bool) 
(declare-fun R1 () Bool) 
(declare-fun R2 () Bool) 
(assert (=> G0(or R0 R1 )))
(assert (=> G3(or R2 )))
(assert (and (= R0 (and G1 )) (=> R0 G0 )))
(assert (and (= R1 (and G2 )) (=> R1 G0 )))
(assert (and (= R2 (and G4 )) (=> R2 G3 )))
(assert-soft (not G1 ) :id sat_tasks)
(assert-soft (not G2 ) :id sat_tasks)
(assert-soft (not G4 ) :id sat_tasks)
(minimize unsat_requirements)
(minimize sat_tasks)
(check-sat)
(get-objectives)
(load-objective-model 1)
(get-model)
(exit)