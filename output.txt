(set-option :produce-models true)
(set-option :opt.priority lex)

(declare-fun G0 () Bool) 
(assert G0)
(assert-soft G0 :id unsat_requirements)
(declare-fun G1 () Bool) 
(declare-fun G2 () Bool) 
(declare-fun G3 () Bool) 
(declare-fun G4 () Bool) 
(assert G4)
(assert-soft G4 :id unsat_requirements)
(declare-fun G5 () Bool) 
(declare-fun G6 () Bool) 
(declare-fun G7 () Bool) 
(assert G7)
(assert-soft G7 :id unsat_requirements)
(declare-fun G8 () Bool) 
(declare-fun G9 () Bool) 
(declare-fun G10 () Bool) 
(declare-fun G11 () Bool) 
(declare-fun G12 () Bool) 
(declare-fun G13 () Bool) 
(declare-fun G14 () Bool) 
(declare-fun G15 () Bool) 
(declare-fun G16 () Bool) 
(assert G16)
(assert-soft G16 :id unsat_requirements)
(declare-fun G17 () Bool) 
(declare-fun G18 () Bool) 
(declare-fun G19 () Bool) 
(declare-fun G20 () Bool) 
(declare-fun G21 () Bool) 
(declare-fun G22 () Bool) 
(declare-fun G23 () Bool) 
(declare-fun G24 () Bool) 
(declare-fun G25 () Bool) 
(declare-fun G26 () Bool) 
(declare-fun G27 () Bool) 
(declare-fun G28 () Bool) 
(declare-fun G29 () Bool) 
(declare-fun G30 () Bool) 
(declare-fun G31 () Bool) 
(declare-fun G32 () Bool) 
(declare-fun G33 () Bool) 
(declare-fun G34 () Bool) 
(declare-fun G35 () Bool) 
(assert G35)
(assert-soft G35 :id unsat_requirements)
(declare-fun G36 () Bool) 
(declare-fun G37 () Bool) 
(declare-fun G38 () Bool) 
(assert G38)
(assert-soft G38 :id unsat_requirements)
(declare-fun G39 () Bool) 
(declare-fun G40 () Bool) 
(declare-fun G41 () Bool) 
(declare-fun G42 () Bool) 
(declare-fun G43 () Bool) 
(declare-fun G44 () Bool) 
(declare-fun G45 () Bool) 
(declare-fun G46 () Bool) 
(declare-fun G47 () Bool) 
(declare-fun G48 () Bool) 
(declare-fun G49 () Bool) 
(declare-fun G50 () Bool) 
(declare-fun G51 () Bool) 
(declare-fun G52 () Bool) 
(declare-fun G53 () Bool) 
(declare-fun G54 () Bool) 
(declare-fun G55 () Bool) 
(declare-fun G56 () Bool) 
(declare-fun G57 () Bool) 
(declare-fun G58 () Bool) 
(declare-fun G59 () Bool) 
(declare-fun G60 () Bool) 
(assert G60)
(assert-soft G60 :id unsat_requirements)
(declare-fun G61 () Bool) 
(declare-fun G62 () Bool) 
(declare-fun G63 () Bool) 
(declare-fun G64 () Bool) 
(declare-fun G65 () Bool) 
(declare-fun G66 () Bool) 
(declare-fun G67 () Bool) 
(declare-fun G68 () Bool) 
(declare-fun G69 () Bool) 
(declare-fun G70 () Bool) 
(declare-fun G71 () Bool) 
(declare-fun G72 () Bool) 
(declare-fun G73 () Bool) 
(declare-fun R0 () Bool) 
(declare-fun R1 () Bool) 
(declare-fun R2 () Bool) 
(declare-fun R3 () Bool) 
(declare-fun R4 () Bool) 
(declare-fun R5 () Bool) 
(declare-fun R6 () Bool) 
(declare-fun R7 () Bool) 
(declare-fun R8 () Bool) 
(declare-fun R9 () Bool) 
(declare-fun R10 () Bool) 
(declare-fun R11 () Bool) 
(declare-fun R12 () Bool) 
(declare-fun R13 () Bool) 
(declare-fun R14 () Bool) 
(declare-fun R15 () Bool) 
(declare-fun R16 () Bool) 
(declare-fun R17 () Bool) 
(declare-fun R18 () Bool) 
(declare-fun R19 () Bool) 
(declare-fun R20 () Bool) 
(declare-fun R21 () Bool) 
(declare-fun R22 () Bool) 
(declare-fun R23 () Bool) 
(declare-fun R24 () Bool) 
(declare-fun R25 () Bool) 
(declare-fun R26 () Bool) 
(declare-fun R27 () Bool) 
(declare-fun R28 () Bool) 
(declare-fun R29 () Bool) 
(declare-fun R30 () Bool) 
(declare-fun R31 () Bool) 
(declare-fun R32 () Bool) 
(declare-fun R33 () Bool) 
(declare-fun R34 () Bool) 
(declare-fun R35 () Bool) 
(declare-fun R36 () Bool) 
(declare-fun R37 () Bool) 
(declare-fun R38 () Bool) 
(declare-fun R39 () Bool) 
(declare-fun R40 () Bool) 
(declare-fun R41 () Bool) 
(declare-fun R42 () Bool) 
(declare-fun R43 () Bool) 
(declare-fun R44 () Bool) 
(declare-fun R45 () Bool) 
(declare-fun R46 () Bool) 
(declare-fun R47 () Bool) 
(declare-fun R48 () Bool) 
(declare-fun R49 () Bool) 
(declare-fun R50 () Bool) 
(declare-fun R51 () Bool) 
(declare-fun R52 () Bool) 
(declare-fun R53 () Bool) 
(declare-fun R54 () Bool) 
(declare-fun R55 () Bool) 
(declare-fun R56 () Bool) 
(declare-fun R57 () Bool) 
(declare-fun R58 () Bool) 
(declare-fun R59 () Bool) 
(declare-fun R60 () Bool) 
(declare-fun R61 () Bool) 
(declare-fun R62 () Bool) 
(declare-fun R63 () Bool) 
(declare-fun R64 () Bool) 
(declare-fun R65 () Bool) 
(declare-fun R66 () Bool) 
(assert (=> G0(or R0 R1 R2 R4 R6 R7 R8 R9 R10 R11 R12 R14 R16 R17 R18 R19 R20 R22 R24 R26 R39 R40 R41 R42 R43 R64 R65 R66 )))
(assert (=> G4(or R3 )))
(assert (=> G7(or R5 R61 R62 R63 )))
(assert (=> G16(or R13 R15 R21 R23 R25 R27 R28 R29 R30 R32 R35 R44 R45 R46 R47 R48 R49 R50 R51 R52 R53 )))
(assert (=> G35(or R31 R37 R38 )))
(assert (=> G38(or R33 R34 R36 )))
(assert (=> G60(or R54 R55 R56 R57 R58 R59 R60 )))
(assert (and (= R0 (and G1 )) (=> R0 G0 )))
(assert (and (= R1 (and G2 )) (=> R1 G0 )))
(assert (and (= R2 (and G3 )) (=> R2 G0 )))
(assert (and (= R3 (and G5 )) (=> R3 G4 )))
(assert (and (= R4 (and G6 )) (=> R4 G0 )))
(assert (and (= R5 (and G8 )) (=> R5 G7 )))
(assert (and (= R6 (and G9 )) (=> R6 G0 )))
(assert (and (= R7 (and G10 )) (=> R7 G0 )))
(assert (and (= R8 (and G11 )) (=> R8 G0 )))
(assert (and (= R9 (and G12 )) (=> R9 G0 )))
(assert (and (= R10 (and G13 )) (=> R10 G0 )))
(assert (and (= R11 (and G14 )) (=> R11 G0 )))
(assert (and (= R12 (and G15 )) (=> R12 G0 )))
(assert (and (= R13 (and G17 )) (=> R13 G16 )))
(assert (and (= R14 (and G18 )) (=> R14 G0 )))
(assert (and (= R15 (and G19 )) (=> R15 G16 )))
(assert (and (= R16 (and G20 )) (=> R16 G0 )))
(assert (and (= R17 (and G21 )) (=> R17 G0 )))
(assert (and (= R18 (and G22 )) (=> R18 G0 )))
(assert (and (= R19 (and G23 )) (=> R19 G0 )))
(assert (and (= R20 (and G24 )) (=> R20 G0 )))
(assert (and (= R21 (and G25 )) (=> R21 G16 )))
(assert (and (= R22 (and G26 )) (=> R22 G0 )))
(assert (and (= R23 (and G27 )) (=> R23 G16 )))
(assert (and (= R24 (and G28 )) (=> R24 G0 )))
(assert (and (= R25 (and G29 )) (=> R25 G16 )))
(assert (and (= R26 (and G30 )) (=> R26 G0 )))
(assert (and (= R27 (and G31 )) (=> R27 G16 )))
(assert (and (= R28 (and G32 )) (=> R28 G16 )))
(assert (and (= R29 (and G33 )) (=> R29 G16 )))
(assert (and (= R30 (and G34 )) (=> R30 G16 )))
(assert (and (= R31 (and G36 )) (=> R31 G35 )))
(assert (and (= R32 (and G37 )) (=> R32 G16 )))
(assert (and (= R33 (and G39 )) (=> R33 G38 )))
(assert (and (= R34 (and G40 )) (=> R34 G38 )))
(assert (and (= R35 (and G41 )) (=> R35 G16 )))
(assert (and (= R36 (and G42 )) (=> R36 G38 )))
(assert (and (= R37 (and G43 )) (=> R37 G35 )))
(assert (and (= R38 (and G44 )) (=> R38 G35 )))
(assert (and (= R39 (and G45 )) (=> R39 G0 )))
(assert (and (= R40 (and G46 )) (=> R40 G0 )))
(assert (and (= R41 (and G47 )) (=> R41 G0 )))
(assert (and (= R42 (and G48 )) (=> R42 G0 )))
(assert (and (= R43 (and G49 )) (=> R43 G0 )))
(assert (and (= R44 (and G50 )) (=> R44 G16 )))
(assert (and (= R45 (and G51 )) (=> R45 G16 )))
(assert (and (= R46 (and G52 )) (=> R46 G16 )))
(assert (and (= R47 (and G53 )) (=> R47 G16 )))
(assert (and (= R48 (and G54 )) (=> R48 G16 )))
(assert (and (= R49 (and G55 )) (=> R49 G16 )))
(assert (and (= R50 (and G56 )) (=> R50 G16 )))
(assert (and (= R51 (and G57 )) (=> R51 G16 )))
(assert (and (= R52 (and G58 )) (=> R52 G16 )))
(assert (and (= R53 (and G59 )) (=> R53 G16 )))
(assert (and (= R54 (and G61 )) (=> R54 G60 )))
(assert (and (= R55 (and G62 )) (=> R55 G60 )))
(assert (and (= R56 (and G63 )) (=> R56 G60 )))
(assert (and (= R57 (and G64 )) (=> R57 G60 )))
(assert (and (= R58 (and G65 )) (=> R58 G60 )))
(assert (and (= R59 (and G66 )) (=> R59 G60 )))
(assert (and (= R60 (and G67 )) (=> R60 G60 )))
(assert (and (= R61 (and G68 )) (=> R61 G7 )))
(assert (and (= R62 (and G69 )) (=> R62 G7 )))
(assert (and (= R63 (and G70 )) (=> R63 G7 )))
(assert (and (= R64 (and G71 )) (=> R64 G0 )))
(assert (and (= R65 (and G72 )) (=> R65 G0 )))
(assert (and (= R66 (and G73 )) (=> R66 G0 )))
(assert-soft (not G1 ) :id sat_tasks)
(assert-soft G1 :weight 1 :id gain)
(assert-soft G1 :weight 1 :id attr)
(assert-soft G1 :weight 0 :id effort)
(assert-soft (not G2 ) :id sat_tasks)
(assert-soft G2 :weight 1 :id gain)
(assert-soft G2 :weight 1 :id attr)
(assert-soft G2 :weight 1 :id effort)
(assert-soft (not G3 ) :id sat_tasks)
(assert-soft G3 :weight 0 :id gain)
(assert-soft G3 :weight 0 :id attr)
(assert-soft G3 :weight 1 :id effort)
(assert-soft (not G5 ) :id sat_tasks)
(assert-soft G5 :weight 1 :id gain)
(assert-soft G5 :weight 0 :id attr)
(assert-soft G5 :weight 1 :id effort)
(assert-soft (not G6 ) :id sat_tasks)
(assert-soft G6 :weight 0 :id gain)
(assert-soft G6 :weight 1 :id attr)
(assert-soft G6 :weight 0 :id effort)
(assert-soft (not G8 ) :id sat_tasks)
(assert-soft G8 :weight 1 :id gain)
(assert-soft G8 :weight 0 :id attr)
(assert-soft G8 :weight 1 :id effort)
(assert-soft (not G9 ) :id sat_tasks)
(assert-soft G9 :weight 0 :id gain)
(assert-soft G9 :weight 0 :id attr)
(assert-soft G9 :weight 1 :id effort)
(assert-soft (not G10 ) :id sat_tasks)
(assert-soft G10 :weight 1 :id gain)
(assert-soft G10 :weight 1 :id attr)
(assert-soft G10 :weight 1 :id effort)
(assert-soft (not G11 ) :id sat_tasks)
(assert-soft G11 :weight 1 :id gain)
(assert-soft G11 :weight 0 :id attr)
(assert-soft G11 :weight 1 :id effort)
(assert-soft (not G12 ) :id sat_tasks)
(assert-soft G12 :weight 1 :id gain)
(assert-soft G12 :weight 0 :id attr)
(assert-soft G12 :weight 0 :id effort)
(assert-soft (not G13 ) :id sat_tasks)
(assert-soft G13 :weight 0 :id gain)
(assert-soft G13 :weight 0 :id attr)
(assert-soft G13 :weight 0 :id effort)
(assert-soft (not G14 ) :id sat_tasks)
(assert-soft G14 :weight 1 :id gain)
(assert-soft G14 :weight 1 :id attr)
(assert-soft G14 :weight 1 :id effort)
(assert-soft (not G15 ) :id sat_tasks)
(assert-soft G15 :weight 0 :id gain)
(assert-soft G15 :weight 1 :id attr)
(assert-soft G15 :weight 1 :id effort)
(assert-soft (not G17 ) :id sat_tasks)
(assert-soft G17 :weight 0 :id gain)
(assert-soft G17 :weight 1 :id attr)
(assert-soft G17 :weight 0 :id effort)
(assert-soft (not G18 ) :id sat_tasks)
(assert-soft G18 :weight 0 :id gain)
(assert-soft G18 :weight 0 :id attr)
(assert-soft G18 :weight 1 :id effort)
(assert-soft (not G19 ) :id sat_tasks)
(assert-soft G19 :weight 1 :id gain)
(assert-soft G19 :weight 1 :id attr)
(assert-soft G19 :weight 0 :id effort)
(assert-soft (not G20 ) :id sat_tasks)
(assert-soft G20 :weight 0 :id gain)
(assert-soft G20 :weight 1 :id attr)
(assert-soft G20 :weight 1 :id effort)
(assert-soft (not G21 ) :id sat_tasks)
(assert-soft G21 :weight 1 :id gain)
(assert-soft G21 :weight 0 :id attr)
(assert-soft G21 :weight 0 :id effort)
(assert-soft (not G22 ) :id sat_tasks)
(assert-soft G22 :weight 1 :id gain)
(assert-soft G22 :weight 0 :id attr)
(assert-soft G22 :weight 1 :id effort)
(assert-soft (not G23 ) :id sat_tasks)
(assert-soft G23 :weight 0 :id gain)
(assert-soft G23 :weight 1 :id attr)
(assert-soft G23 :weight 0 :id effort)
(assert-soft (not G24 ) :id sat_tasks)
(assert-soft G24 :weight 0 :id gain)
(assert-soft G24 :weight 1 :id attr)
(assert-soft G24 :weight 1 :id effort)
(assert-soft (not G25 ) :id sat_tasks)
(assert-soft G25 :weight 0 :id gain)
(assert-soft G25 :weight 0 :id attr)
(assert-soft G25 :weight 1 :id effort)
(assert-soft (not G26 ) :id sat_tasks)
(assert-soft G26 :weight 1 :id gain)
(assert-soft G26 :weight 0 :id attr)
(assert-soft G26 :weight 1 :id effort)
(assert-soft (not G27 ) :id sat_tasks)
(assert-soft G27 :weight 0 :id gain)
(assert-soft G27 :weight 1 :id attr)
(assert-soft G27 :weight 0 :id effort)
(assert-soft (not G28 ) :id sat_tasks)
(assert-soft G28 :weight 0 :id gain)
(assert-soft G28 :weight 1 :id attr)
(assert-soft G28 :weight 1 :id effort)
(assert-soft (not G29 ) :id sat_tasks)
(assert-soft G29 :weight 1 :id gain)
(assert-soft G29 :weight 1 :id attr)
(assert-soft G29 :weight 1 :id effort)
(assert-soft (not G30 ) :id sat_tasks)
(assert-soft G30 :weight 1 :id gain)
(assert-soft G30 :weight 1 :id attr)
(assert-soft G30 :weight 1 :id effort)
(assert-soft (not G31 ) :id sat_tasks)
(assert-soft G31 :weight 0 :id gain)
(assert-soft G31 :weight 1 :id attr)
(assert-soft G31 :weight 0 :id effort)
(assert-soft (not G32 ) :id sat_tasks)
(assert-soft G32 :weight 1 :id gain)
(assert-soft G32 :weight 1 :id attr)
(assert-soft G32 :weight 1 :id effort)
(assert-soft (not G33 ) :id sat_tasks)
(assert-soft G33 :weight 1 :id gain)
(assert-soft G33 :weight 0 :id attr)
(assert-soft G33 :weight 0 :id effort)
(assert-soft (not G34 ) :id sat_tasks)
(assert-soft G34 :weight 1 :id gain)
(assert-soft G34 :weight 1 :id attr)
(assert-soft G34 :weight 0 :id effort)
(assert-soft (not G36 ) :id sat_tasks)
(assert-soft G36 :weight 1 :id gain)
(assert-soft G36 :weight 1 :id attr)
(assert-soft G36 :weight 1 :id effort)
(assert-soft (not G37 ) :id sat_tasks)
(assert-soft G37 :weight 1 :id gain)
(assert-soft G37 :weight 1 :id attr)
(assert-soft G37 :weight 0 :id effort)
(assert-soft (not G39 ) :id sat_tasks)
(assert-soft G39 :weight 0 :id gain)
(assert-soft G39 :weight 0 :id attr)
(assert-soft G39 :weight 1 :id effort)
(assert-soft (not G40 ) :id sat_tasks)
(assert-soft G40 :weight 1 :id gain)
(assert-soft G40 :weight 0 :id attr)
(assert-soft G40 :weight 0 :id effort)
(assert-soft (not G41 ) :id sat_tasks)
(assert-soft G41 :weight 1 :id gain)
(assert-soft G41 :weight 1 :id attr)
(assert-soft G41 :weight 1 :id effort)
(assert-soft (not G42 ) :id sat_tasks)
(assert-soft G42 :weight 0 :id gain)
(assert-soft G42 :weight 1 :id attr)
(assert-soft G42 :weight 0 :id effort)
(assert-soft (not G43 ) :id sat_tasks)
(assert-soft G43 :weight 0 :id gain)
(assert-soft G43 :weight 1 :id attr)
(assert-soft G43 :weight 0 :id effort)
(assert-soft (not G44 ) :id sat_tasks)
(assert-soft G44 :weight 0 :id gain)
(assert-soft G44 :weight 1 :id attr)
(assert-soft G44 :weight 0 :id effort)
(assert-soft (not G45 ) :id sat_tasks)
(assert-soft G45 :weight 0 :id gain)
(assert-soft G45 :weight 0 :id attr)
(assert-soft G45 :weight 0 :id effort)
(assert-soft (not G46 ) :id sat_tasks)
(assert-soft G46 :weight 1 :id gain)
(assert-soft G46 :weight 1 :id attr)
(assert-soft G46 :weight 1 :id effort)
(assert-soft (not G47 ) :id sat_tasks)
(assert-soft G47 :weight 1 :id gain)
(assert-soft G47 :weight 0 :id attr)
(assert-soft G47 :weight 0 :id effort)
(assert-soft (not G48 ) :id sat_tasks)
(assert-soft G48 :weight 1 :id gain)
(assert-soft G48 :weight 1 :id attr)
(assert-soft G48 :weight 1 :id effort)
(assert-soft (not G49 ) :id sat_tasks)
(assert-soft G49 :weight 0 :id gain)
(assert-soft G49 :weight 1 :id attr)
(assert-soft G49 :weight 1 :id effort)
(assert-soft (not G50 ) :id sat_tasks)
(assert-soft G50 :weight 1 :id gain)
(assert-soft G50 :weight 0 :id attr)
(assert-soft G50 :weight 0 :id effort)
(assert-soft (not G51 ) :id sat_tasks)
(assert-soft G51 :weight 1 :id gain)
(assert-soft G51 :weight 1 :id attr)
(assert-soft G51 :weight 1 :id effort)
(assert-soft (not G52 ) :id sat_tasks)
(assert-soft G52 :weight 1 :id gain)
(assert-soft G52 :weight 1 :id attr)
(assert-soft G52 :weight 1 :id effort)
(assert-soft (not G53 ) :id sat_tasks)
(assert-soft G53 :weight 1 :id gain)
(assert-soft G53 :weight 1 :id attr)
(assert-soft G53 :weight 0 :id effort)
(assert-soft (not G54 ) :id sat_tasks)
(assert-soft G54 :weight 0 :id gain)
(assert-soft G54 :weight 0 :id attr)
(assert-soft G54 :weight 1 :id effort)
(assert-soft (not G55 ) :id sat_tasks)
(assert-soft G55 :weight 0 :id gain)
(assert-soft G55 :weight 1 :id attr)
(assert-soft G55 :weight 1 :id effort)
(assert-soft (not G56 ) :id sat_tasks)
(assert-soft G56 :weight 0 :id gain)
(assert-soft G56 :weight 0 :id attr)
(assert-soft G56 :weight 0 :id effort)
(assert-soft (not G57 ) :id sat_tasks)
(assert-soft G57 :weight 0 :id gain)
(assert-soft G57 :weight 1 :id attr)
(assert-soft G57 :weight 1 :id effort)
(assert-soft (not G58 ) :id sat_tasks)
(assert-soft G58 :weight 0 :id gain)
(assert-soft G58 :weight 0 :id attr)
(assert-soft G58 :weight 0 :id effort)
(assert-soft (not G59 ) :id sat_tasks)
(assert-soft G59 :weight 0 :id gain)
(assert-soft G59 :weight 0 :id attr)
(assert-soft G59 :weight 0 :id effort)
(assert-soft (not G61 ) :id sat_tasks)
(assert-soft G61 :weight 0 :id gain)
(assert-soft G61 :weight 0 :id attr)
(assert-soft G61 :weight 1 :id effort)
(assert-soft (not G62 ) :id sat_tasks)
(assert-soft G62 :weight 1 :id gain)
(assert-soft G62 :weight 0 :id attr)
(assert-soft G62 :weight 1 :id effort)
(assert-soft (not G63 ) :id sat_tasks)
(assert-soft G63 :weight 0 :id gain)
(assert-soft G63 :weight 0 :id attr)
(assert-soft G63 :weight 0 :id effort)
(assert-soft (not G64 ) :id sat_tasks)
(assert-soft G64 :weight 0 :id gain)
(assert-soft G64 :weight 0 :id attr)
(assert-soft G64 :weight 0 :id effort)
(assert-soft (not G65 ) :id sat_tasks)
(assert-soft G65 :weight 1 :id gain)
(assert-soft G65 :weight 0 :id attr)
(assert-soft G65 :weight 0 :id effort)
(assert-soft (not G66 ) :id sat_tasks)
(assert-soft G66 :weight 1 :id gain)
(assert-soft G66 :weight 0 :id attr)
(assert-soft G66 :weight 0 :id effort)
(assert-soft (not G67 ) :id sat_tasks)
(assert-soft G67 :weight 0 :id gain)
(assert-soft G67 :weight 1 :id attr)
(assert-soft G67 :weight 0 :id effort)
(assert-soft (not G68 ) :id sat_tasks)
(assert-soft G68 :weight 1 :id gain)
(assert-soft G68 :weight 0 :id attr)
(assert-soft G68 :weight 0 :id effort)
(assert-soft (not G69 ) :id sat_tasks)
(assert-soft G69 :weight 0 :id gain)
(assert-soft G69 :weight 1 :id attr)
(assert-soft G69 :weight 0 :id effort)
(assert-soft (not G70 ) :id sat_tasks)
(assert-soft G70 :weight 0 :id gain)
(assert-soft G70 :weight 1 :id attr)
(assert-soft G70 :weight 0 :id effort)
(assert-soft (not G71 ) :id sat_tasks)
(assert-soft G71 :weight 1 :id gain)
(assert-soft G71 :weight 1 :id attr)
(assert-soft G71 :weight 1 :id effort)
(assert-soft (not G72 ) :id sat_tasks)
(assert-soft G72 :weight 0 :id gain)
(assert-soft G72 :weight 0 :id attr)
(assert-soft G72 :weight 0 :id effort)
(assert-soft (not G73 ) :id sat_tasks)
(assert-soft G73 :weight 1 :id gain)
(assert-soft G73 :weight 1 :id attr)
(assert-soft G73 :weight 0 :id effort)
(maximize gain)
(maximize attr)
(minimize effort)
(minimize unsat_requirements)
(minimize sat_tasks)
(check-sat)
(get-objectives)
(load-objective-model 1)
(get-model)
(exit)